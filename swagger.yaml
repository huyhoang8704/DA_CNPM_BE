# swagger.yaml
openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
  description: API documentation for Restaurant management

servers:
  - url: http://localhost:3000
    description: Development server

paths:
  /users/register:
    post:
      summary: Đăng ký tài khoản
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  example: "Nguyen Van A"
                  description: "Tên đầy đủ của người dùng"
                email:
                  type: string
                  example: "example@gmail.com"
                  description: "Email của người dùng"
                phone:
                  type: string
                  example: "0123456789"
                  description: "Số điện thoại của người dùng"
                password:
                  type: string
                  example: "password123"
                  description: "Mật khẩu của người dùng"
                address:
                  type: string
                  example: "123 Đường ABC, TP.HCM"
                  description: "Địa chỉ của người dùng"
      responses:
        '201':
          description: Đăng ký thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Đăng ký thành công!"
                  user:
                    type: object
                    properties:
                      fullName:
                        type: string
                        example: "Nguyen Van A"
                      email:
                        type: string
                        example: "example@gmail.com"
                      role:
                        type: string
                        example: "user"
                  cart:
                    type: object
                    properties:
                      user_id:
                        type: string
                        example: "60c72b2f4f1a4c3d88a1eae2"
                      dishes:
                        type: array
                        items:
                          type: object
                        description: "Giỏ hàng của người dùng"
                  token:
                    type: string
                    example: "jwt-token-example"
        '400':
          description: Email đã được sử dụng
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email đã được sử dụng."
        '500':
          description: Đăng ký thất bại
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Đăng ký thất bại!"
                  error:
                    type: string
                    example: "Error details"
  /users/login:
    post:
      summary: Đăng nhập
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "example@gmail.com"
                  description: "Email đăng nhập của người dùng"
                password:
                  type: string
                  example: "password123"
                  description: "Mật khẩu của người dùng"
      responses:
        '200':
          description: Đăng nhập thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Đăng nhập thành công!"
                  user:
                    type: string
                    example: "Nguyen Van A"
                  token:
                    type: string
                    example: "jwt-token-example"
                  cart:
                    type: object
                    properties:
                      customer_id:
                        type: string
                        example: "60c72b2f4f1a4c3d88a1eae2"
                      dishes:
                        type: array
                        items:
                          type: object
                        description: "Thông tin các món ăn trong giỏ hàng"
        '400':
          description: Lỗi xác thực
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email hoặc mật khẩu đăng nhập không chính xác "
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Có lỗi xảy ra"
                  error:
                    type: string
                    example: "Chi tiết lỗi"
  /users/detail:
    get:
      summary: Lấy thông tin chi tiết người dùng
      tags:
        - Users
      security:
        - bearerAuth: []   # Sử dụng token JWT để xác thực
      responses:
        '200':
          description: Lấy thông tin người dùng thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Thông tin user!"
                  user:
                    type: object
                    properties:
                      fullname:
                        type: string
                        example: "Nguyen Van A"
                      email:
                        type: string
                        example: "example@gmail.com"
                      phone:
                        type: string
                        example: "0123456789"
                      address:
                        type: string
                        example: "123 Đường ABC, TP.HCM"
                      role:
                        type: string
                        example: "user"
                      token:
                        type: string
                        example: "jwt-token-example"
        '404':
          description: Người dùng không tồn tại
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Người dùng không tồn tại."
        '400':
          description: Có lỗi xảy ra khi lấy thông tin người dùng
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error!"
                  error:
                    type: string
                    example: "Chi tiết lỗi"

  /users/logout:
    get:
      summary: Đăng xuất
      tags:
        - Users
      security:
        - bearerAuth: []   # Sử dụng token JWT để xác thực
      responses:
        '200':
          description: Đăng xuất thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Đăng xuất thành công!"
        '400':
          description: Có lỗi xảy ra khi đăng xuất
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error!"
                  error:
                    type: string
                    example: "Chi tiết lỗi"

  /users/edit:
    patch:
      summary: Cập nhật thông tin mới người dùng
      tags:
        - Users
      security:
        - bearerAuth: []   # Sử dụng token JWT để xác thực
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  example: "Nguyen Van B"
                  description: "Tên đầy đủ mới của người dùng"
                phone:
                  type: string
                  example: "0987654321"
                  description: "Số điện thoại mới của người dùng"
                address:
                  type: string
                  example: "456 Đường XYZ, TP.HCM"
                  description: "Địa chỉ mới của người dùng"
                # Có thể thêm các trường khác nếu cần cập nhật
      responses:
        '200':
          description: Cập nhật thông tin thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Cập nhật thông tin thành công!"
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "60c72b2f4f1a4c3d88a1eae2"
                      fullname:
                        type: string
                        example: "Nguyen Van B"
                      email:
                        type: string
                        example: "newemail@gmail.com"
                      phone:
                        type: string
                        example: "0987654321"
                      address:
                        type: string
                        example: "456 Đường XYZ, TP.HCM"
                      role:
                        type: string
                        example: "user"
                      token:
                        type: string
                        example: "jwt-token-example"
        '500':
          description: Có lỗi xảy ra khi cập nhật thông tin
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error!"
                  error:
                    type: string
                    example: "Chi tiết lỗi"

  /users/requestOtp:
    post:
      summary: Yêu cầu mã OTP
      tags:
        - Users
      security:
        - bearerAuth: []   # Sử dụng token JWT để xác thực
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "example@gmail.com"
                  description: "Email của người dùng yêu cầu OTP"
      responses:
        '200':
          description: Mã OTP đã được gửi thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "OTP has been sent"
        '400':
          description: Lỗi khi yêu cầu OTP, ví dụ email không tồn tại hoặc lỗi gửi OTP
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email does not exist! or Error sending OTP"
                  error:
                    type: string
                    example: "Chi tiết lỗi"

  /users/verify_Otp:
    post:
      summary: Xác minh OTP và thay đổi mật khẩu
      tags:
        - Users
      security:
        - bearerAuth: []   # Sử dụng token JWT để xác thực
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "example@gmail.com"
                  description: "Email của người dùng yêu cầu thay đổi mật khẩu"
                otp:
                  type: string
                  example: "123456"
                  description: "Mã OTP được gửi đến email"
                newPassword:
                  type: string
                  example: "newPassword123"
                  description: "Mật khẩu mới người dùng muốn thay đổi"
      responses:
        '200':
          description: OTP hợp lệ và mật khẩu đã được thay đổi thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Otp is valid and password has been changed"
        '400':
          description: Lỗi xác minh OTP hoặc thông tin không hợp lệ
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User does not exist or Invalid OTP"
        '500':
          description: Lỗi khi xử lý yêu cầu
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error when determining OTP"
                  

  /menu:
    get:
      summary: Lấy danh sách món ăn hiển thị (menu)
      tags:
        - Menu
      parameters:
        - name: keyword
          in: query
          description: Từ khóa để tìm kiếm món ăn
          required: false
          schema:
            type: string
            example: "pizza"
        - name: sortKey
          in: query
          description: Tên trường để sắp xếp
          required: false
          schema:
            type: string
            example: "price"
        - name: sortValue
          in: query
          description: Hướng sắp xếp (asc hoặc desc)
          required: false
          schema:
            type: string
            example: "desc"
        - name: page
          in: query
          description: Trang hiện tại để phân trang
          required: false
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Thành công, trả về danh sách món ăn
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Success!"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "60d2d0f54d24242698bcf4b1"
                        name:
                          type: string
                          example: "Pizza Margherita"
                        slug:
                          type: string
                          example: "pizza-margherita"
                        description:
                          type: string
                          example: "Pizza with tomato, mozzarella, and basil"
                        price:
                          type: number
                          format: float
                          example: 10.5
                        like:
                          type: integer
                          example: 150
                        imageUrl:
                          type: string
                          example: "http://example.com/image.jpg"
                        category:
                          type: string
                          example: "Main Course"
                        slugCategory:
                          type: string
                          example: "main-course"
                        
        '400':
          description: Lỗi khi xử lý yêu cầu, parameters không hợp lệ
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters"
        '500':
          description: Lỗi server khi truy vấn cơ sở dữ liệu
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Server error"


  /menu/{slugCategory}:
    get:
      summary: Lấy danh sách món ăn theo danh mục
      tags:
        - Menu
      parameters:
        - name: slugCategory
          in: path
          required: true
          description: "Slug của danh mục món ăn"
          schema:
            type: string
            example: "main-course"
        - name: keyword
          in: query
          description: Từ khóa để tìm kiếm món ăn
          required: false
          schema:
            type: string
            example: "pizza"
        - name: sortKey
          in: query
          description: Tên trường để sắp xếp, ví dụ price
          required: false
          schema:
            type: string
            example: "price"
        - name: sortValue
          in: query
          description: Hướng sắp xếp (asc hoặc desc)
          required: false
          schema:
            type: string
            example: "desc"
        - name: page
          in: query
          description: Trang hiện tại để phân trang
          required: false
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Thành công, trả về danh sách món ăn trong danh mục
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Success!"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "60d2d0f54d24242698bcf4b1"
                        name:
                          type: string
                          example: "Pizza Margherita"
                        slug:
                          type: string
                          example: "pizza-margherita"
                        description:
                          type: string
                          example: "Pizza with tomato, mozzarella, and basil"
                        price:
                          type: number
                          format: float
                          example: 10.5
                        like:
                          type: integer
                          example: 150
                        imageUrl:
                          type: string
                          example: "http://example.com/image.jpg"
                        category:
                          type: string
                          example: "Main Course"
                        slugCategory:
                          type: string
                          example: "main-course"
        '400':
          description: Lỗi khi xử lý yêu cầu, ví dụ tham số không hợp lệ
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters"
        '500':
          description: Lỗi server khi truy vấn cơ sở dữ liệu
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Server error"

  /menu/detail/{slug}:
    get:
      summary: Lấy chi tiết món ăn theo slug(tên của món ăn)
      tags:
        - Menu
      parameters:
        - name: slug
          in: path
          required: true
          description: "Slug của món ăn"
          schema:
            type: string
            example: "pizza-margherita"
      responses:
        '200':
          description: Thành công, trả về thông tin chi tiết món ăn
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "60d2d0f54d24242698bcf4b1"
                  name:
                    type: string
                    example: "Pizza Margherita"
                  slug:
                    type: string
                    example: "pizza-margherita"
                  description:
                    type: string
                    example: "Pizza with tomato, mozzarella, and basil"
                  price:
                    type: number
                    format: float
                    example: 10.5
                  like:
                    type: integer
                    example: 150
                  imageUrl:
                    type: string
                    example: "http://example.com/image.jpg"
                  category:
                    type: string
                    example: "Main Course"
                  slugCategory:
                    type: string
                    example: "main-course"
        '404':
          description: Không tìm thấy món ăn với slug đã cho
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Dish not found"
        '500':
          description: Lỗi server khi truy vấn cơ sở dữ liệu
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Server error"


  /table/create:
    post:
      summary: Đặt bàn cho khách hàng
      tags:
        - TableBooking
      security:
        - BearerAuth: []
      requestBody:
        description: Thông tin đặt bàn
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingDate:
                  type: string
                  format: date
                  example: "10/11/2024"
                bookingTime:
                  type: string
                  format: date-time
                  example: "22:00:00"
                numberofSeats:
                  type: integer
                  example: 4
      responses:
        '201':
          description: Đặt bàn thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Chúc mừng [User] đã đặt bàn thành công"
                  data:
                    type: object
                    properties:
                      customer_id:
                        type: string
                        example: "60d2d0f54d24242698bcf4b1"
                      bookingDate:
                        type: string
                        example: "10/11/2024"
                      bookingTime:
                        type: string
                        example: "22:00:00"
                      numberofSeats:
                        type: integer
                        example: 4
                      tableId:
                        type: string
                        example: "60d2d0f54d24242698bcf4b2"
        '400':
          description: Không còn bàn nào có sẵn để đặt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Không còn bàn nào có sẵn để đặt!"
        '500':
          description: Lỗi server khi tạo đặt bàn
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Đặt bàn thất bại"
                  error:
                    type: string
                    example: "Lỗi kết nối cơ sở dữ liệu"


  /cart:
    get:
      summary: Lấy chi tiết giỏ hàng của người dùng
      tags:
        - Cart
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Thành công lấy thông tin chi tiết giỏ hàng
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Success!"
                  cart:
                    type: object
                    properties:
                      dishes:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "Món ăn A"
                            price:
                              type: number
                              format: float
                              example: 150000
                            quantity:
                              type: integer
                              example: 2
                            category:
                              type: string
                              example: "Món chính"
                            imageUrl:
                              type: string
                              example: "https://example.com/image.jpg"
        '400':
          description: Lỗi khi lấy thông tin giỏ hàng
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error!"
                  error:
                    type: string
                    example: "Không tìm thấy giỏ hàng"


  /cart/add:
    post:
      summary: Thêm món ăn vào giỏ hàng
      tags:
        - Cart
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dishId:
                  type: string
                  description: ID của món ăn cần thêm vào giỏ hàng
                  example: "60c72b2f5f9b4e4b4c8b4567"
                quantity:
                  type: integer
                  description: Số lượng món ăn cần thêm
                  example: 2
      responses:
        '200':
          description: Thành công thêm món ăn vào giỏ hàng
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Thêm sản phẩm vào giỏ hàng thành công!"
                  cart:
                    type: object
                    properties:
                      dishes:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "Món ăn A"
                            price:
                              type: number
                              format: float
                              example: 150000
                            quantity:
                              type: integer
                              example: 2
                            category:
                              type: string
                              example: "Món chính"
                            imageUrl:
                              type: string
                              example: "https://example.com/image.jpg"
        '400':
          description: Lỗi khi thêm món ăn vào giỏ hàng
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error!"
                  error:
                    type: string
                    example: "Không tìm thấy món ăn hoặc có lỗi khi thêm vào giỏ hàng"


  /cart/update/{dish_id}:
    post:
      summary: Cập nhật số lượng món ăn trong giỏ hàng
      tags:
        - Cart
      security:
        - BearerAuth: []
      parameters:
        - name: dish_id
          in: path
          required: true
          description: ID của món ăn cần cập nhật số lượng
          schema:
            type: string
          example: "60c72b2f5f9b4e4b4c8b4567"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: Số lượng mới của món ăn
                  example: 3
      responses:
        '200':
          description: Cập nhật số lượng món ăn trong giỏ hàng thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Cập nhật số lượng cho Món ăn A thành công!"
        '400':
          description: Lỗi khi cập nhật món ăn
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error!"
                  error:
                    type: string
                    example: "Có lỗi khi cập nhật số lượng món ăn"
